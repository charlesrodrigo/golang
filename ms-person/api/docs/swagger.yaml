basePath: /api/v1
definitions:
  dto.Address:
    properties:
      city:
        type: string
      country:
        type: string
      neighborhood:
        type: string
      state:
        type: string
      street:
        type: string
      zipcode:
        type: string
    required:
    - city
    - country
    - neighborhood
    - state
    - street
    - zipcode
    type: object
  dto.CreatePersonRequest:
    properties:
      address:
        $ref: '#/definitions/dto.Address'
      email:
        type: string
      name:
        type: string
    required:
    - address
    - email
    - name
    type: object
  dto.GetPersonRequest:
    properties:
      address:
        $ref: '#/definitions/dto.Address'
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: http://localhost:8080/swagger/index.html
host: localhost:8080
info:
  contact:
    email: charlesrodrigo@gmail.com
    name: Charles Rodrigo
  description: This is a crud of person.
  title: Crud Person API
  version: "1.0"
paths:
  /api/v1/person:
    get:
      consumes:
      - application/json
      description: get all person
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GetPersonRequest'
            type: array
      summary: get all person
      tags:
      - person
    post:
      consumes:
      - application/json
      description: create person
      parameters:
      - description: Person Data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: create person
      tags:
      - person
  /api/v1/person/{id}:
    delete:
      consumes:
      - application/json
      description: delete person
      parameters:
      - description: id person
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: delete person
      tags:
      - person
    get:
      consumes:
      - application/json
      description: get person
      parameters:
      - description: id person
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetPersonRequest'
      summary: get person
      tags:
      - person
    put:
      consumes:
      - application/json
      description: update person
      parameters:
      - description: id person
        in: path
        name: id
        required: true
        type: string
      - description: Person Data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreatePersonRequest'
      summary: update person
      tags:
      - person
swagger: "2.0"
